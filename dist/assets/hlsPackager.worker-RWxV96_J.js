var B=Object.defineProperty;var U=t=>{throw TypeError(t)};var F=(t,e,s)=>e in t?B(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var o=(t,e,s)=>F(t,typeof e!="symbol"?e+"":e,s),P=(t,e,s)=>e.has(t)||U("Cannot "+s);var r=(t,e,s)=>(P(t,e,"read from private field"),s?s.call(t):e.get(t)),h=(t,e,s)=>e.has(t)?U("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,s),w=(t,e,s,i)=>(P(t,e,"write to private field"),i?i.call(t,s):e.set(t,s),s);var n;(function(t){t.LOAD="LOAD",t.EXEC="EXEC",t.FFPROBE="FFPROBE",t.WRITE_FILE="WRITE_FILE",t.READ_FILE="READ_FILE",t.DELETE_FILE="DELETE_FILE",t.RENAME="RENAME",t.CREATE_DIR="CREATE_DIR",t.LIST_DIR="LIST_DIR",t.DELETE_DIR="DELETE_DIR",t.ERROR="ERROR",t.DOWNLOAD="DOWNLOAD",t.PROGRESS="PROGRESS",t.LOG="LOG",t.MOUNT="MOUNT",t.UNMOUNT="UNMOUNT"})(n||(n={}));const G=(()=>{let t=0;return()=>t++})(),X=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),j=new Error("called FFmpeg.terminate()");var E,m,d,p,g,y,f;class z{constructor(){h(this,E,null);h(this,m,{});h(this,d,{});h(this,p,[]);h(this,g,[]);o(this,"loaded",!1);h(this,y,()=>{r(this,E)&&(r(this,E).onmessage=({data:{id:e,type:s,data:i}})=>{switch(s){case n.LOAD:this.loaded=!0,r(this,m)[e](i);break;case n.MOUNT:case n.UNMOUNT:case n.EXEC:case n.FFPROBE:case n.WRITE_FILE:case n.READ_FILE:case n.DELETE_FILE:case n.RENAME:case n.CREATE_DIR:case n.LIST_DIR:case n.DELETE_DIR:r(this,m)[e](i);break;case n.LOG:r(this,p).forEach(a=>a(i));break;case n.PROGRESS:r(this,g).forEach(a=>a(i));break;case n.ERROR:r(this,d)[e](i);break}delete r(this,m)[e],delete r(this,d)[e]})});h(this,f,({type:e,data:s},i=[],a)=>r(this,E)?new Promise((O,b)=>{const D=G();r(this,E)&&r(this,E).postMessage({id:D,type:e,data:s},i),r(this,m)[D]=O,r(this,d)[D]=b,a==null||a.addEventListener("abort",()=>{b(new DOMException(`Message # ${D} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(X));o(this,"load",({classWorkerURL:e,...s}={},{signal:i}={})=>(r(this,E)||(w(this,E,e?new Worker(new URL(e,import.meta.url),{type:"module"}):new Worker(new URL("/assets/worker-DYSz7Krg.js",import.meta.url),{type:"module"})),r(this,y).call(this)),r(this,f).call(this,{type:n.LOAD,data:s},void 0,i)));o(this,"exec",(e,s=-1,{signal:i}={})=>r(this,f).call(this,{type:n.EXEC,data:{args:e,timeout:s}},void 0,i));o(this,"ffprobe",(e,s=-1,{signal:i}={})=>r(this,f).call(this,{type:n.FFPROBE,data:{args:e,timeout:s}},void 0,i));o(this,"terminate",()=>{const e=Object.keys(r(this,d));for(const s of e)r(this,d)[s](j),delete r(this,d)[s],delete r(this,m)[s];r(this,E)&&(r(this,E).terminate(),w(this,E,null),this.loaded=!1)});o(this,"writeFile",(e,s,{signal:i}={})=>{const a=[];return s instanceof Uint8Array&&a.push(s.buffer),r(this,f).call(this,{type:n.WRITE_FILE,data:{path:e,data:s}},a,i)});o(this,"mount",(e,s,i)=>{const a=[];return r(this,f).call(this,{type:n.MOUNT,data:{fsType:e,options:s,mountPoint:i}},a)});o(this,"unmount",e=>{const s=[];return r(this,f).call(this,{type:n.UNMOUNT,data:{mountPoint:e}},s)});o(this,"readFile",(e,s="binary",{signal:i}={})=>r(this,f).call(this,{type:n.READ_FILE,data:{path:e,encoding:s}},void 0,i));o(this,"deleteFile",(e,{signal:s}={})=>r(this,f).call(this,{type:n.DELETE_FILE,data:{path:e}},void 0,s));o(this,"rename",(e,s,{signal:i}={})=>r(this,f).call(this,{type:n.RENAME,data:{oldPath:e,newPath:s}},void 0,i));o(this,"createDir",(e,{signal:s}={})=>r(this,f).call(this,{type:n.CREATE_DIR,data:{path:e}},void 0,s));o(this,"listDir",(e,{signal:s}={})=>r(this,f).call(this,{type:n.LIST_DIR,data:{path:e}},void 0,s));o(this,"deleteDir",(e,{signal:s}={})=>r(this,f).call(this,{type:n.DELETE_DIR,data:{path:e}},void 0,s))}on(e,s){e==="log"?r(this,p).push(s):e==="progress"&&r(this,g).push(s)}off(e,s){e==="log"?w(this,p,r(this,p).filter(i=>i!==s)):e==="progress"&&w(this,g,r(this,g).filter(i=>i!==s))}}E=new WeakMap,m=new WeakMap,d=new WeakMap,p=new WeakMap,g=new WeakMap,y=new WeakMap,f=new WeakMap;var T;(function(t){t.MEMFS="MEMFS",t.NODEFS="NODEFS",t.NODERAWFS="NODERAWFS",t.IDBFS="IDBFS",t.WORKERFS="WORKERFS",t.PROXYFS="PROXYFS"})(T||(T={}));function A(t){var i;const e="/".replace(/\/+$/,"/"),s=((i=self.location)==null?void 0:i.origin)||"";return new URL(e+t.replace(/^\/+/,""),s).toString()}const R=new z;let $=!1;function l(t,e){postMessage({id:t,log:e})}function K(t,e){postMessage({id:t,progress:Math.max(0,Math.min(100,Math.round(e*100)))})}async function Y(t){$||(l(t,"FFmpeg load start"),await R.load({coreURL:A("ffmpeg/ffmpeg-core.js"),wasmURL:A("ffmpeg/ffmpeg-core.wasm"),workerURL:A("ffmpeg/ffmpeg-worker.js")}),R.on("log",({type:e,message:s})=>l(t,`[ffmpeg ${e}] ${s}`)),R.on("progress",({progress:e})=>K(t,e)),$=!0,l(t,"FFmpeg load complete"))}function H(t){const e=t.lastIndexOf(".");return e>0?t.slice(0,e):t}function x(t){return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}self.onmessage=async t=>{const{id:e,name:s,mime:i,arrayBuffer:a,segmentSeconds:O,playlistName:b,segmentPrefix:D,copyIfPossible:M}=t.data;try{if(!(a instanceof ArrayBuffer))throw new Error("Input is not an ArrayBuffer");if(typeof O!="number"||!Number.isFinite(O))throw new Error("Invalid segment seconds");await Y(e),l(e,`Write input ${s} size ${a.byteLength}`),await R.writeFile(s,new Uint8Array(a));const u=b||"index.m3u8",k=D||"seg_",N=["-i",s,...M?["-c","copy","-bsf:v","h264_mp4toannexb"]:["-c:v","libx264","-preset","veryfast","-crf","23","-c:a","aac","-b:a","128k"],"-f","hls","-hls_time",String(O||6),"-hls_playlist_type","vod","-hls_list_size","0","-hls_segment_filename",`${k}%03d.ts`,u];l(e,`Exec start ${JSON.stringify(N)}`),await R.exec(N),l(e,"Exec complete");const L=[],I=await R.readFile(u);if(!I||I.byteLength===0)throw new Error("Playlist not created");const v=new TextDecoder().decode(I);L.push({name:u,type:"application/vnd.apple.mpegurl",buffer:x(I)}),l(e,`Playlist bytes ${I.byteLength}`);const S=Array.from(v.matchAll(/^[^#].*\.ts$/gm)).map(c=>c[0]);l(e,`Segments discovered ${S.length}`);for(const c of S){const _=await R.readFile(c);if(!_||_.byteLength===0){l(e,`Empty segment ${c}`);continue}L.push({name:c,type:"video/mp2t",buffer:x(_)})}const W=`${H(s)}_hls`,C=L.reduce((c,_)=>c+_.buffer.byteLength,0);l(e,`Output files ${L.length} total bytes ${C}`),postMessage({id:e,folder:W,files:L},L.map(c=>c.buffer))}catch(u){postMessage({id:e,error:(u==null?void 0:u.message)||"HLS packaging failed"})}finally{try{await R.deleteFile(s)}catch{}}};
